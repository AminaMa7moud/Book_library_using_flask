"""Create User table

Revision ID: 432eacea974b
Revises: 
Create Date: 2025-03-12 13:06:05.427537

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '432eacea974b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book')
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('img',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('appropriate',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('appropriate',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('img',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    op.create_table('book',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('publish_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('img', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('appropriate', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='book_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='book_pkey')
    )
    # ### end Alembic commands ###
